import { Database } from "./types.ts";

export const accountCategories: Omit<
  Database["public"]["Tables"]["accountCategory"]["Insert"],
  "companyId"
>[] = [
  {
    category: "Bank",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Accounts Receivable",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Inventory",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Other Current Asset",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Fixed Asset",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Accumulated Depreciation",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Other Asset",
    class: "Asset",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Accounts Payable",
    class: "Liability",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Other Current Liability",
    class: "Liability",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Long Term Liability",
    class: "Liability",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Equity - No Close",
    class: "Equity",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Equity - Close",
    class: "Equity",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Retained Earnings",
    class: "Equity",
    incomeBalance: "Balance Sheet",
    createdBy: "system",
  },
  {
    category: "Income",
    class: "Revenue",
    incomeBalance: "Income Statement",
    createdBy: "system",
  },
  {
    category: "Cost of Goods Sold",
    class: "Expense",
    incomeBalance: "Income Statement",
    createdBy: "system",
  },
  {
    category: "Expense",
    class: "Expense",
    incomeBalance: "Income Statement",
    createdBy: "system",
  },
  {
    category: "Other Income",
    class: "Expense",
    incomeBalance: "Income Statement",
    createdBy: "system",
  },
  {
    category: "Other Expense",
    class: "Expense",
    incomeBalance: "Income Statement",
    createdBy: "system",
  },
];

export const accounts: (Omit<
  Database["public"]["Tables"]["account"]["Insert"],
  "companyId" | "accountCategoryId"
> & { accountCategory: string | null })[] = [
  {
    number: "10000",
    name: "Income Statement",
    type: "Begin Total",
    accountCategory: "Income",
    incomeBalance: "Income Statement",
    class: null,
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "11000",
    name: "Revenue",
    type: "Begin Total",
    accountCategory: "Income",
    incomeBalance: "Income Statement",
    class: "Revenue",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "11210",
    name: "Sales",
    type: "Posting",
    accountCategory: "Income",
    incomeBalance: "Income Statement",
    class: "Revenue",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "11600",
    name: "Sales Discounts",
    type: "Posting",
    accountCategory: "Income",
    incomeBalance: "Income Statement",
    class: "Revenue",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "19999",
    name: "Revenue, Total",
    type: "End Total",
    accountCategory: "Income",
    incomeBalance: "Income Statement",
    class: "Revenue",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "20000",
    name: "Costs of Goods Sold",
    type: "Begin Total",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "21210",
    name: "Cost of Goods Sold",
    type: "Posting",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "21410",
    name: "Purchases",
    type: "Posting",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "21590",
    name: "Direct Cost Applied",
    type: "Posting",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "21600",
    name: "Overhead Applied",
    type: "Posting",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "21610",
    name: "Purchase Variance",
    type: "Posting",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "21700",
    name: "Inventory Adjustment",
    type: "Posting",
    accountCategory: "Cost of Goods Sold",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "24999",
    name: "Costs of Goods Sold, Total",
    type: "End Total",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "25000",
    name: "Direct Capacity Cost",
    type: "Begin Total",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "25705",
    name: "Material Variance",
    type: "Posting",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "25710",
    name: "Capacity Variance",
    type: "Posting",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "25720",
    name: "Overhead Accounts",
    type: "Posting",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "47045",
    name: "Maintenance Expense",
    type: "Posting",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "49999",
    name: "Direct Capacity Cost, Total",
    type: "End Total",
    accountCategory: "Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "50000",
    name: "Depreciation of Fixed Assets",
    type: "Begin Total",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "50015",
    name: "Depreciation Expense",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "50040",
    name: "Gains and Losses on Disposal",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "50045",
    name: "Service Charge Account",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "50999",
    name: "Depreciation of Fixed Assets, Total",
    type: "End Total",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "51000",
    name: "Interest",
    type: "Begin Total",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "51110",
    name: "Interest Account",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "51115",
    name: "Supplier Payment Discounts",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "51120",
    name: "Customer Payment Discounts",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "51235",
    name: "Rounding Account",
    type: "Posting",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "51999",
    name: "Interest, Total",
    type: "End Total",
    accountCategory: "Other Expense",
    incomeBalance: "Income Statement",
    class: "Expense",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "79999",
    name: "Income Statement, Total",
    type: "Total",
    accountCategory: "Income",
    incomeBalance: "Income Statement",
    class: null,
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "80000",
    name: "Balance Sheet",
    type: "Begin Total",
    incomeBalance: "Balance Sheet",
    accountCategory: null,
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "80001",
    name: "Assets",
    type: "Begin Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "81000",
    name: "Fixed Assets",
    type: "Begin Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "81010",
    name: "Fixed Asset Acquisition Cost",
    type: "Posting",
    accountCategory: "Fixed Asset",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "81015",
    name: "Fixed Asset Acquisition Cost on Disposal",
    type: "Posting",
    accountCategory: "Fixed Asset",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "81020",
    name: "Accumulated Depreciation",
    type: "Posting",
    accountCategory: "Accumulated Depreciation",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "81030",
    name: "Fixed Asset Acquisition Depreciation on Disposal",
    type: "Posting",
    accountCategory: "Accumulated Depreciation",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "81999",
    name: "Fixed Assets, Total",
    type: "End Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "83000",
    name: "Current Assets",
    type: "Begin Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "83105",
    name: "Inventory",
    type: "Posting",
    accountCategory: "Inventory",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "83120",
    name: "Inventory Interim",
    type: "Posting",
    accountCategory: "Inventory",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "83125",
    name: "Work In Progress (WIP)",
    type: "Posting",
    accountCategory: "Inventory",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "85005",
    name: "Receivables",
    type: "Posting",
    accountCategory: "Accounts Receivable",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "85020",
    name: "Inventory Invoiced Not Received",
    type: "Posting",
    accountCategory: "Accounts Receivable",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "86005",
    name: "Bank - Cash",
    type: "Posting",
    accountCategory: "Bank",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "86010",
    name: "Bank - Local Currency",
    type: "Posting",
    accountCategory: "Bank",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "86015",
    name: "Bank - Foreign Currency",
    type: "Posting",
    accountCategory: "Bank",
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "87999",
    name: "Current Assets, Total",
    type: "End Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "89999",
    name: "Assets, Total",
    type: "End Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Asset",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "90000",
    name: "Liabilities",
    type: "Begin Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "92210",
    name: "Customer Prepayments",
    type: "Posting",
    accountCategory: "Other Current Liability",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "93005",
    name: "Payables",
    type: "Posting",
    accountCategory: "Accounts Payable",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "93010",
    name: "Inventory Received Not Invoiced",
    type: "Posting",
    accountCategory: "Other Current Liability",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "93110",
    name: "Inventory Shipped Not Invoiced",
    type: "Posting",
    accountCategory: "Other Current Liability",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "94100",
    name: "Sales Tax Payable",
    type: "Posting",
    accountCategory: "Other Current Liability",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "94110",
    name: "Purchase Tax Payable",
    type: "Posting",
    accountCategory: "Other Current Liability",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "94115",
    name: "Reverse Charge Tax Payable",
    type: "Posting",
    accountCategory: "Other Current Liability",
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "94999",
    name: "Liabilities, Total",
    type: "End Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Liability",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "95000",
    name: "Equity",
    type: "Begin Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Equity",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "95010",
    name: "Retained Earnings",
    type: "Posting",
    accountCategory: "Retained Earnings",
    incomeBalance: "Balance Sheet",
    class: "Equity",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "96010",
    name: "Owner Equity",
    type: "Posting",
    accountCategory: "Equity - No Close",
    incomeBalance: "Balance Sheet",
    class: "Equity",
    directPosting: true,
    createdBy: "system",
  },
  {
    number: "96999",
    name: "Equity, Total",
    type: "End Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: "Equity",
    directPosting: false,
    createdBy: "system",
  },
  {
    number: "99999",
    name: "Balance Sheet, Total",
    type: "Total",
    accountCategory: null,
    incomeBalance: "Balance Sheet",
    class: null,
    directPosting: false,
    createdBy: "system",
  },
];

export const accountDefaults = {
  salesAccount: "11210",
  salesDiscountAccount: "11600",
  costOfGoodsSoldAccount: "21210",
  purchaseAccount: "21410",
  directCostAppliedAccount: "21590",
  overheadCostAppliedAccount: "21600",
  purchaseVarianceAccount: "21610",
  inventoryAdjustmentVarianceAccount: "21700",
  materialVarianceAccount: "25705",
  capacityVarianceAccount: "25710",
  overheadAccount: "25720",
  maintenanceAccount: "47045",
  assetDepreciationExpenseAccount: "50015",
  assetGainsAndLossesAccount: "50040",
  serviceChargeAccount: "50045",
  interestAccount: "51110",
  supplierPaymentDiscountAccount: "51115",
  customerPaymentDiscountAccount: "51120",
  roundingAccount: "51235",
  assetAquisitionCostAccount: "81010",
  assetAquisitionCostOnDisposalAccount: "81015",
  accumulatedDepreciationAccount: "81020",
  accumulatedDepreciationOnDisposalAccount: "81030",
  inventoryAccount: "83105",
  inventoryInterimAccrualAccount: "83120",
  workInProgressAccount: "83125",
  receivablesAccount: "85005",
  inventoryInvoicedNotReceivedAccount: "85020",
  bankCashAccount: "86005",
  bankLocalCurrencyAccount: "86010",
  bankForeignCurrencyAccount: "86015",
  prepaymentAccount: "92210",
  payablesAccount: "93005",
  inventoryReceivedNotInvoicedAccount: "93010",
  inventoryShippedNotInvoicedAccount: "93110",
  salesTaxPayableAccount: "94100",
  purchaseTaxPayableAccount: "94110",
  reverseChargeSalesTaxPayableAccount: "94115",
  retainedEarningsAccount: "95010",
};

export const currencies = [
  {
    name: "US Dollar",
    code: "USD",
    symbol: "$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Canadian Dollar",
    code: "CAD",
    symbol: "CA$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Euro",
    code: "EUR",
    symbol: "€",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "United Arab Emirates Dirham",
    code: "AED",
    symbol: "AED",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Afghan Afghani",
    code: "AFN",
    symbol: "Af",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Albanian Lek",
    code: "ALL",
    symbol: "ALL",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Armenian Dram",
    code: "AMD",
    symbol: "AMD",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Argentine Peso",
    code: "ARS",
    symbol: "AR$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Australian Dollar",
    code: "AUD",
    symbol: "AU$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Azerbaijani Manat",
    code: "AZN",
    symbol: "man.",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Bosnia-Herzegovina Convertible Mark",
    code: "BAM",
    symbol: "KM",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Bangladeshi Taka",
    code: "BDT",
    symbol: "Tk",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Bulgarian Lev",
    code: "BGN",
    symbol: "BGN",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Bahraini Dinar",
    code: "BHD",
    symbol: "BD",
    exchangeRate: 1,
    decimalPlaces: 3,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Burundian Franc",
    code: "BIF",
    symbol: "FBu",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Brunei Dollar",
    code: "BND",
    symbol: "BN$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Bolivian Boliviano",
    code: "BOB",
    symbol: "Bs",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Brazilian Real",
    code: "BRL",
    symbol: "R$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Botswanan Pula",
    code: "BWP",
    symbol: "BWP",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Belarusian Ruble",
    code: "BYN",
    symbol: "Br",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Belize Dollar",
    code: "BZD",
    symbol: "BZ$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Congolese Franc",
    code: "CDF",
    symbol: "CDF",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Swiss Franc",
    code: "CHF",
    symbol: "CHF",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Chilean Peso",
    code: "CLP",
    symbol: "CL$",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Chinese Yuan",
    code: "CNY",
    symbol: "CN¥",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Colombian Peso",
    code: "COP",
    symbol: "CO$",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Costa Rican Colón",
    code: "CRC",
    symbol: "₡",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Cape Verdean Escudo",
    code: "CVE",
    symbol: "CV$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Czech Republic Koruna",
    code: "CZK",
    symbol: "Kč",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Djiboutian Franc",
    code: "DJF",
    symbol: "Fdj",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Danish Krone",
    code: "DKK",
    symbol: "Dkr",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Dominican Peso",
    code: "DOP",
    symbol: "RD$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Algerian Dinar",
    code: "DZD",
    symbol: "DA",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Egyptian Pound",
    code: "EGP",
    symbol: "EGP",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Eritrean Nakfa",
    code: "ERN",
    symbol: "Nfk",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Ethiopian Birr",
    code: "ETB",
    symbol: "Br",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "British Pound Sterling",
    code: "GBP",
    symbol: "£",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Georgian Lari",
    code: "GEL",
    symbol: "GEL",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Ghanaian Cedi",
    code: "GHS",
    symbol: "GH₵",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Guinean Franc",
    code: "GNF",
    symbol: "FG",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Guatemalan Quetzal",
    code: "GTQ",
    symbol: "GTQ",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Hong Kong Dollar",
    code: "HKD",
    symbol: "HK$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Honduran Lempira",
    code: "HNL",
    symbol: "HNL",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Croatian Kuna",
    code: "HRK",
    symbol: "kn",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Hungarian Forint",
    code: "HUF",
    symbol: "Ft",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Indonesian Rupiah",
    code: "IDR",
    symbol: "Rp",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Israeli New Sheqel",
    code: "ILS",
    symbol: "₪",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Indian Rupee",
    code: "INR",
    symbol: "Rs",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Iraqi Dinar",
    code: "IQD",
    symbol: "IQD",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Iranian Rial",
    code: "IRR",
    symbol: "IRR",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Icelandic Króna",
    code: "ISK",
    symbol: "Ikr",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Jamaican Dollar",
    code: "JMD",
    symbol: "J$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Jordanian Dinar",
    code: "JOD",
    symbol: "JD",
    exchangeRate: 1,
    decimalPlaces: 3,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Japanese Yen",
    code: "JPY",
    symbol: "¥",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Kenyan Shilling",
    code: "KES",
    symbol: "Ksh",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Cambodian Riel",
    code: "KHR",
    symbol: "KHR",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Comorian Franc",
    code: "KMF",
    symbol: "CF",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "South Korean Won",
    code: "KRW",
    symbol: "₩",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Kuwaiti Dinar",
    code: "KWD",
    symbol: "KD",
    exchangeRate: 1,
    decimalPlaces: 3,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Kazakhstani Tenge",
    code: "KZT",
    symbol: "KZT",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Lebanese Pound",
    code: "LBP",
    symbol: "L.L",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Sri Lankan Rupee",
    code: "LKR",
    symbol: "SLRs",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Lithuanian Litas",
    code: "LTL",
    symbol: "Lt",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Latvian Lats",
    code: "LVL",
    symbol: "Ls",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Libyan Dinar",
    code: "LYD",
    symbol: "LD",
    exchangeRate: 1,
    decimalPlaces: 3,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Moroccan Dirham",
    code: "MAD",
    symbol: "MAD",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Moldovan Leu",
    code: "MDL",
    symbol: "MDL",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Malagasy Ariary",
    code: "MGA",
    symbol: "MGA",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Macedonian Denar",
    code: "MKD",
    symbol: "MKD",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Myanma Kyat",
    code: "MMK",
    symbol: "MMK",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Macanese Pataca",
    code: "MOP",
    symbol: "MOP$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Mauritian Rupee",
    code: "MUR",
    symbol: "MURs",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Mexican Peso",
    code: "MXN",
    symbol: "MX$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Malaysian Ringgit",
    code: "MYR",
    symbol: "RM",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Mozambican Metical",
    code: "MZN",
    symbol: "MTn",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Namibian Dollar",
    code: "NAD",
    symbol: "N$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Nigerian Naira",
    code: "NGN",
    symbol: "₦",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Nicaraguan Córdoba",
    code: "NIO",
    symbol: "C$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Norwegian Krone",
    code: "NOK",
    symbol: "Nkr",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Nepalese Rupee",
    code: "NPR",
    symbol: "NPRs",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "New Zealand Dollar",
    code: "NZD",
    symbol: "NZ$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Omani Rial",
    code: "OMR",
    symbol: "OMR",
    exchangeRate: 1,
    decimalPlaces: 3,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Panamanian Balboa",
    code: "PAB",
    symbol: "B/.",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Peruvian Nuevo Sol",
    code: "PEN",
    symbol: "S/.",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Philippine Peso",
    code: "PHP",
    symbol: "₱",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Pakistani Rupee",
    code: "PKR",
    symbol: "PKRs",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Polish Zloty",
    code: "PLN",
    symbol: "zł",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Paraguayan Guarani",
    code: "PYG",
    symbol: "₲",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Qatari Rial",
    code: "QAR",
    symbol: "QR",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Romanian Leu",
    code: "RON",
    symbol: "RON",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Serbian Dinar",
    code: "RSD",
    symbol: "din.",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Russian Ruble",
    code: "RUB",
    symbol: "RUB",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Rwandan Franc",
    code: "RWF",
    symbol: "RWF",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Saudi Riyal",
    code: "SAR",
    symbol: "SR",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Sudanese Pound",
    code: "SDG",
    symbol: "SDG",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Swedish Krona",
    code: "SEK",
    symbol: "Skr",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Singapore Dollar",
    code: "SGD",
    symbol: "S$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Somali Shilling",
    code: "SOS",
    symbol: "Ssh",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Syrian Pound",
    code: "SYP",
    symbol: "SY£",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Thai Baht",
    code: "THB",
    symbol: "฿",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Tunisian Dinar",
    code: "TND",
    symbol: "DT",
    exchangeRate: 1,
    decimalPlaces: 3,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Tongan Paʻanga",
    code: "TOP",
    symbol: "T$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Turkish Lira",
    code: "TRY",
    symbol: "TL",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Trinidad and Tobago Dollar",
    code: "TTD",
    symbol: "TT$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "New Taiwan Dollar",
    code: "TWD",
    symbol: "NT$",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Tanzanian Shilling",
    code: "TZS",
    symbol: "TSh",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Ukrainian Hryvnia",
    code: "UAH",
    symbol: "₴",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Ugandan Shilling",
    code: "UGX",
    symbol: "USh",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Uruguayan Peso",
    code: "UYU",
    symbol: "$U",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Uzbekistan Som",
    code: "UZS",
    symbol: "UZS",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Venezuelan Bolívar",
    code: "VEF",
    symbol: "Bs.F",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Vietnamese Dong",
    code: "VND",
    symbol: "₫",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "CFA Franc BEAC",
    code: "XAF",
    symbol: "FCFA",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "CFA Franc BCEAO",
    code: "XOF",
    symbol: "CFA",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Yemeni Rial",
    code: "YER",
    symbol: "YR",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "South African Rand",
    code: "ZAR",
    symbol: "R",
    exchangeRate: 1,
    decimalPlaces: 2,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Zambian Kwacha",
    code: "ZMK",
    symbol: "ZK",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
  {
    name: "Zimbabwean Dollar",
    code: "ZWL",
    symbol: "ZWL$",
    exchangeRate: 1,
    decimalPlaces: 0,
    isBaseCurrency: false,
    createdBy: "system",
  },
];

export const customFields: Omit<
  Database["public"]["Tables"]["customFieldTable"]["Insert"],
  "companyId"
>[] = [
  {
    table: "account",
    name: "Account",
    module: "Accounting",
  },
  {
    table: "accountCategory",
    name: "Account Category",
    module: "Accounting",
  },
  {
    table: "accountSubcategory",
    name: "Account Subcategory",
    module: "Accounting",
  },
  {
    table: "contractor",
    name: "Contractor",
    module: "Resources",
  },
  {
    table: "currency",
    name: "Currency",
    module: "Accounting",
  },
  {
    table: "customer",
    name: "Customer",
    module: "Sales",
  },
  {
    table: "customerContact",
    name: "Customer Contact",
    module: "Sales",
  },
  {
    table: "customerLocation",
    name: "Customer Location",
    module: "Sales",
  },
  {
    table: "customerStatus",
    name: "Customer Status",
    module: "Sales",
  },
  {
    table: "customerType",
    name: "Customer Type",
    module: "Sales",
  },
  {
    table: "department",
    name: "Department",
    module: "Resources",
  },
  {
    table: "employeeJob",
    name: "Employee Job",
    module: "Resources",
  },
  {
    table: "equipment",
    name: "Equipment",
    module: "Resources",
  },
  {
    table: "equipmentType",
    name: "Equipment Type",
    module: "Resources",
  },
  {
    table: "holiday",
    name: "Holiday",
    module: "Resources",
  },
  {
    table: "journal",
    name: "Journal",
    module: "Accounting",
  },
  {
    table: "journalLine",
    name: "Journal Line",
    module: "Accounting",
  },
  {
    table: "location",
    name: "Location",
    module: "Resources",
  },
  {
    table: "part",
    name: "Part",
    module: "Parts",
  },
  {
    table: "partCost",
    name: "Part Cost",
    module: "Parts",
  },
  {
    table: "partGroup",
    name: "Part Group",
    module: "Parts",
  },
  {
    table: "partInventory",
    name: "Part Inventory",
    module: "Parts",
  },
  {
    table: "partPlanning",
    name: "Part Planning",
    module: "Parts",
  },
  {
    table: "partReplenishment",
    name: "Part Replenishment",
    module: "Parts",
  },
  {
    table: "partSupplier",
    name: "Part Supplier",
    module: "Parts",
  },
  {
    table: "partUnitSalePrice",
    name: "Part Unit Sale Price",
    module: "Parts",
  },
  {
    table: "partner",
    name: "Partner",
    module: "Resources",
  },
  {
    table: "paymentTerm",
    name: "Payment Term",
    module: "Accounting",
  },
  {
    table: "purchaseInvoice",
    name: "Purchase Invoice",
    module: "Invoicing",
  },
  {
    table: "purchaseInvoiceLine",
    name: "Purchase Invoice Line",
    module: "Invoicing",
  },
  {
    table: "purchasePayment",
    name: "Purchase Invoice Payment",
    module: "Invoicing",
  },
  {
    table: "purchaseOrder",
    name: "Purchase Order",
    module: "Purchasing",
  },
  {
    table: "purchaseOrderDelivery",
    name: "Purchase Order Delivery",
    module: "Purchasing",
  },
  {
    table: "purchaseOrderLine",
    name: "Purchase Order Line",
    module: "Purchasing",
  },
  {
    table: "purchaseOrderPayment",
    name: "Purchase Order Payment",
    module: "Purchasing",
  },
  {
    table: "quote",
    name: "Quote",
    module: "Sales",
  },
  {
    table: "quoteAssembly",
    name: "Quote Assembly",
    module: "Sales",
  },
  {
    table: "quoteLine",
    name: "Quote Line",
    module: "Sales",
  },
  {
    table: "quoteMaterial",
    name: "Quote Material",
    module: "Sales",
  },
  {
    table: "quoteOperation",
    name: "Quote Operation",
    module: "Sales",
  },
  {
    table: "receipt",
    name: "Receipt",
    module: "Inventory",
  },
  {
    table: "requestForQuote",
    name: "RFQ",
    module: "Purchasing",
  },
  {
    table: "requestForQuoteLine",
    name: "RFQ Line",
    module: "Purchasing",
  },
  {
    table: "requestForQuoteSupplier",
    name: "RFQ Supplier",
    module: "Purchasing",
  },
  {
    table: "service",
    name: "Service",
    module: "Parts",
  },
  {
    table: "serviceSupplier",
    name: "Service Supplier",
    module: "Parts",
  },
  {
    table: "shelf",
    name: "Shelf",
    module: "Inventory",
  },
  {
    table: "shift",
    name: "Shift",
    module: "Resources",
  },
  {
    table: "shippingMethod",
    name: "Shipping Method",
    module: "Inventory",
  },
  {
    table: "shippingTerm",
    name: "Shipping Term",
    module: "Accounting",
  },
  {
    table: "supplier",
    name: "Supplier",
    module: "Purchasing",
  },
  {
    table: "supplierContact",
    name: "Supplier Contact",
    module: "Purchasing",
  },
  {
    table: "supplierLocation",
    name: "Supplier Location",
    module: "Purchasing",
  },
  {
    table: "supplierPayment",
    name: "Supplier Payment",
    module: "Purchasing",
  },
  {
    table: "supplierShipping",
    name: "Supplier Shipping",
    module: "Purchasing",
  },
  {
    table: "supplierStatus",
    name: "Supplier Status",
    module: "Purchasing",
  },
  {
    table: "supplierType",
    name: "Supplier Type",
    module: "Purchasing",
  },
  {
    table: "unitOfMeasure",
    name: "Unit of Measure",
    module: "Inventory",
  },
  {
    table: "workCell",
    name: "Work Cell",
    module: "Resources",
  },
  {
    table: "workCellType",
    name: "Work Cell Type",
    module: "Resources",
  },
];

export const customerStatuses = [
  "Active",
  "Inactive",
  "Lead",
  "On Hold",
  "Cancelled",
];

export const fiscalYearSettings: Omit<
  Database["public"]["Tables"]["fiscalYearSettings"]["Insert"],
  "companyId"
> = {
  startMonth: "January",
  taxStartMonth: "January",
  updatedBy: "system",
};

function getDefaultAccount(key: string) {
  if (!(key in accountDefaults))
    throw new Error(`Account default not found for ${key}`);
  // @ts-ignore: we check above
  return accountDefaults[key];
}

export const groupCompanyTemplate = "<%=XXXX-YYYY-ZZZZZZZZZZZZ=%>";
export const groups = [
  {
    id: `00000000-0000-${groupCompanyTemplate}`,
    name: "All Employees",
    isCustomerTypeGroup: false,
    isEmployeeTypeGroup: true,
    isSupplierTypeGroup: false,
  },
  {
    id: `11111111-1111-${groupCompanyTemplate}`,
    name: "All Customers",
    isCustomerTypeGroup: true,
    isEmployeeTypeGroup: false,
    isSupplierTypeGroup: false,
  },
  {
    id: `22222222-2222-${groupCompanyTemplate}`,
    name: "All Suppliers",
    isCustomerTypeGroup: false,
    isEmployeeTypeGroup: false,
    isSupplierTypeGroup: true,
  },
];

export const integrations = [
  {
    id: "exchange-rates-v1",
    title: "Exchange Rates",
    description: "Pulls currency rates from exchange rates API",
    logoPath: "/integrations/exchange-rates.png",
    jsonschema: {
      type: "object",
      properties: {
        apiKey: {
          type: "string",
        },
      },
      required: ["apiKey"],
    },
  },
  {
    id: "resend",
    title: "Resend Emails",
    description: "Sends Transactional Emails with Resend API",
    logoPath: "/integrations/resend.png",
    jsonschema: {
      type: "object",
      properties: {
        apiKey: {
          type: "string",
        },
      },
      required: ["apiKey"],
    },
  },
  // {
  //   id: 'google-places-v2',
  //   title: 'Google Places',
  //   description: 'Autocomplete addresses with Google Places API',
  //   logoPath: '/integrations/google-places.png',
  //   jsonschema: {
  //     type: 'object',
  //     properties: {
  //       apiKey: {
  //         type: 'string',
  //       },
  //     },
  //     required: ['apiKey'],
  //   },
  // },
];

export const paymentTerms: Omit<
  Database["public"]["Tables"]["paymentTerm"]["Insert"],
  "companyId"
>[] = [
  {
    name: "Net 15",
    daysDue: 15,
    calculationMethod: "Net",
    daysDiscount: 0,
    discountPercentage: 0,
    createdBy: "system",
  },
  {
    name: "Net 30",
    daysDue: 30,
    calculationMethod: "Net",
    daysDiscount: 0,
    discountPercentage: 0,
    createdBy: "system",
  },
  {
    name: "Net 60",
    daysDue: 60,
    calculationMethod: "Net",
    daysDiscount: 0,
    discountPercentage: 0,
    createdBy: "system",
  },
  {
    name: "1% 10 Net 30",
    daysDue: 30,
    calculationMethod: "Net",
    daysDiscount: 10,
    discountPercentage: 1,
    createdBy: "system",
  },
  {
    name: "2% 10 Net 30",
    daysDue: 30,
    calculationMethod: "Net",
    daysDiscount: 10,
    discountPercentage: 2,
    createdBy: "system",
  },
  {
    name: "COD",
    daysDue: 0,
    calculationMethod: "Net",
    daysDiscount: 0,
    discountPercentage: 0,
    createdBy: "system",
  },
  {
    name: "Net EOM 10th",
    daysDue: 10,
    calculationMethod: "End of Month",
    daysDiscount: 0,
    discountPercentage: 0,
    createdBy: "system",
  },
];

export const postingGroupInventory = {
  partGroupId: null,
  locationId: null,
  costOfGoodsSoldAccount: getDefaultAccount("costOfGoodsSoldAccount"),
  inventoryAccount: getDefaultAccount("inventoryAccount"),
  inventoryInterimAccrualAccount: getDefaultAccount(
    "inventoryInterimAccrualAccount"
  ),
  inventoryReceivedNotInvoicedAccount: getDefaultAccount(
    "inventoryReceivedNotInvoicedAccount"
  ),
  inventoryInvoicedNotReceivedAccount: getDefaultAccount(
    "inventoryInvoicedNotReceivedAccount"
  ),
  inventoryShippedNotInvoicedAccount: getDefaultAccount(
    "inventoryShippedNotInvoicedAccount"
  ),
  workInProgressAccount: getDefaultAccount("workInProgressAccount"),
  directCostAppliedAccount: getDefaultAccount("directCostAppliedAccount"),
  overheadCostAppliedAccount: getDefaultAccount("overheadCostAppliedAccount"),
  purchaseVarianceAccount: getDefaultAccount("purchaseVarianceAccount"),
  inventoryAdjustmentVarianceAccount: getDefaultAccount(
    "inventoryAdjustmentVarianceAccount"
  ),
  materialVarianceAccount: getDefaultAccount("materialVarianceAccount"),
  capacityVarianceAccount: getDefaultAccount("capacityVarianceAccount"),
  overheadAccount: getDefaultAccount("overheadAccount"),
  updatedBy: "system",
};

export const postingGroupPurchasing = {
  partGroupId: null,
  supplierTypeId: null,
  payablesAccount: getDefaultAccount("payablesAccount"),
  purchaseAccount: getDefaultAccount("purchaseAccount"),
  purchaseDiscountAccount: getDefaultAccount("purchaseAccount"),
  purchaseCreditAccount: getDefaultAccount("purchaseAccount"),
  purchasePrepaymentAccount: getDefaultAccount("prepaymentAccount"),
  purchaseTaxPayableAccount: getDefaultAccount("purchaseTaxPayableAccount"),
  updatedBy: "system",
};

export const postingGroupSales = {
  partGroupId: null,
  customerTypeId: null,
  receivablesAccount: getDefaultAccount("receivablesAccount"),
  salesAccount: getDefaultAccount("salesAccount"),
  salesDiscountAccount: getDefaultAccount("salesDiscountAccount"),
  salesCreditAccount: getDefaultAccount("salesAccount"),
  salesPrepaymentAccount: getDefaultAccount("prepaymentAccount"),
  salesTaxPayableAccount: getDefaultAccount("salesTaxPayableAccount"),
  updatedBy: "system",
};

export const sequences = [
  {
    table: "purchaseOrder",
    name: "Purchase Order",
    prefix: "PO",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
  {
    table: "purchaseInvoice",
    name: "Purchase Invoice",
    prefix: "AP",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
  {
    table: "receipt",
    name: "Receipt",
    prefix: "RE",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
  {
    table: "salesOrder",
    name: "Sales Order",
    prefix: "SO",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
  {
    table: "salesInvoice",
    name: "Sales Invoice",
    prefix: "AR",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
  {
    table: "requestForQuote",
    name: "Request For Quote",
    prefix: "RFQ",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
  {
    table: "quote",
    name: "Quote",
    prefix: "QO",
    suffix: null,
    next: 0,
    size: 6,
    step: 1,
  },
];

export const supplierStauses = ["Active", "Inactive", "Pending", "Rejected"];

export const unitOfMeasures = [
  {
    name: "Each",
    code: "EA",
    createdBy: "system",
  },
  {
    name: "Case",
    code: "CS",
    createdBy: "system",
  },
  {
    name: "Pack",
    code: "PK",
    createdBy: "system",
  },
  {
    name: "Pallet",
    code: "PL",
    createdBy: "system",
  },
  {
    name: "Roll",
    code: "RL",
    createdBy: "system",
  },
  {
    name: "Box",
    code: "BX",
    createdBy: "system",
  },
  {
    name: "Bag",
    code: "BG",
    createdBy: "system",
  },
  {
    name: "Drum",
    code: "DR",
    createdBy: "system",
  },
  {
    name: "Gallon",
    code: "GL",
    createdBy: "system",
  },
  {
    name: "Liter",
    code: "LT",
    createdBy: "system",
  },
  {
    name: "Ounce",
    code: "OZ",
    createdBy: "system",
  },
  {
    name: "Pound",
    code: "LB",
    createdBy: "system",
  },
  {
    name: "Ton",
    code: "TN",
    createdBy: "system",
  },
  {
    name: "Yard",
    code: "YD",
    createdBy: "system",
  },
  {
    name: "Meter",
    code: "MT",
    createdBy: "system",
  },
];
